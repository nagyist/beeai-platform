# Copyright 2025 Â© BeeAI a Series of LF Projects, LLC
# SPDX-License-Identifier: Apache-2.0

"""empty message

Revision ID: 46ec8881ac4c
Revises: 5dec926744d0
Create Date: 2025-08-28 11:12:55.331169

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "46ec8881ac4c"
down_revision: str | None = "5dec926744d0"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None

env_store_entity_enum = sa.Enum("provider", "model_provider", name="envstoreentity")
configuration_type_enum = sa.Enum("system", "user", name="configurationtype")


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE userrole ADD VALUE 'developer'")
    op.create_table(
        "model_providers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=1024), nullable=False),
        sa.Column("type", sa.String(length=128), nullable=False),
        sa.Column("base_url", sa.String(length=1024), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("watsonx_project_id", sa.String(length=256), nullable=True),
        sa.Column("watsonx_space_id", sa.String(length=256), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("base_url"),
    )
    op.create_table(
        "configurations",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("configuration_type", configuration_type_enum, nullable=False),
        sa.Column("default_llm_model", sa.String(length=256), nullable=True),
        sa.Column("default_embedding_model", sa.String(length=256), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_unique_system_configuration",
        "configurations",
        ["configuration_type"],
        unique=True,
        postgresql_where="configuration_type = 'system'",
    )

    # we will lose variable data - llm, embedding providers and agent variables will have to be reconfigured
    op.drop_table("variables")

    op.create_table(
        "variables",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("key", sa.String(length=256), nullable=False),
        sa.Column("value", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("parent_entity", env_store_entity_enum, nullable=False),
        sa.Column("provider_id", sa.UUID(), nullable=True),
        sa.Column("model_provider_id", sa.UUID(), nullable=True),
        sa.CheckConstraint(
            "(parent_entity = 'provider' AND provider_id IS NOT NULL) OR (parent_entity = 'model_provider' AND model_provider_id IS NOT NULL)",
            name="parent_entity_matches_reference",
        ),
        sa.CheckConstraint(
            "(provider_id IS NOT NULL)::int + (model_provider_id IS NOT NULL)::int= 1", name="exactly_one_reference"
        ),
        sa.ForeignKeyConstraint(["model_provider_id"], ["model_providers.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["provider_id"], ["providers.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key", "parent_entity", "model_provider_id", name="uk_model_provider"),
        sa.UniqueConstraint("key", "parent_entity", "provider_id", name="uk_provider"),
    )
    op.create_index("idx_entity_attributes_model_provider", "variables", ["model_provider_id"], unique=False)
    op.create_index("idx_entity_attributes_provider", "variables", ["provider_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    op.drop_index("idx_entity_attributes_provider", table_name="variables")
    op.drop_index("idx_entity_attributes_model_provider", table_name="variables")

    op.drop_table("variables")

    op.create_table(
        "variables",
        sa.Column("key", sa.VARCHAR(length=256), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("key", name=op.f("variables_pkey")),
    )

    op.drop_index(
        "ix_unique_system_configuration", table_name="configurations", postgresql_where="configuration_type = 'system'"
    )
    op.drop_table("configurations")
    op.drop_table("model_providers")
    env_store_entity_enum.drop(op.get_bind())
    configuration_type_enum.drop(op.get_bind())
